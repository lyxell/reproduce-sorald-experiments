diff --git a/core/src/main/java/site/ycsb/Client.java b/core/src/main/java/site/ycsb/Client.java
index bd968211..524c6e8d 100644
--- a/core/src/main/java/site/ycsb/Client.java
+++ b/core/src/main/java/site/ycsb/Client.java
@@ -16,6 +16,13 @@
  */
 
 package site.ycsb;
+import java.util.HashMap;
+import java.util.Enumeration;
+import java.util.Map;
+import java.util.List;
+import java.util.ArrayList;
+import java.util.Properties;
+import org.apache.htrace.core.Tracer.Builder;
 
 import site.ycsb.measurements.Measurements;
 import site.ycsb.measurements.exporter.MeasurementsExporter;
diff --git a/core/src/main/java/site/ycsb/CommandLine.java b/core/src/main/java/site/ycsb/CommandLine.java
index c215058a..f39cb5fa 100644
--- a/core/src/main/java/site/ycsb/CommandLine.java
+++ b/core/src/main/java/site/ycsb/CommandLine.java
@@ -16,6 +16,14 @@
  */
 
 package site.ycsb;
+import java.util.HashMap;
+import java.util.HashSet;
+import java.util.Vector;
+import java.util.Enumeration;
+import java.util.Map;
+import java.util.Set;
+import java.util.Properties;
+import java.util.Arrays;
 
 import site.ycsb.workloads.CoreWorkload;
 
diff --git a/rest/src/test/java/site/ycsb/webservice/rest/Utils.java b/rest/src/test/java/site/ycsb/webservice/rest/Utils.java
index be50a42a..11ceea13 100644
--- a/rest/src/test/java/site/ycsb/webservice/rest/Utils.java
+++ b/rest/src/test/java/site/ycsb/webservice/rest/Utils.java
@@ -64,16 +64,15 @@ public class Utils {
 
   public static List<String> read(String filepath) {
     List<String> list = new ArrayList<String>();
-    try {
-      BufferedReader file = new BufferedReader(new FileReader(filepath));
-      String line = null;
-      while ((line = file.readLine()) != null) {
-        list.add(line.trim());
-      }
-      file.close();
-    } catch (IOException e) {
-      e.printStackTrace();
-    }
+        try (BufferedReader file = new BufferedReader(new FileReader(filepath))) {
+            String line = null;
+            while ((line = file.readLine()) != null) {
+                list.add(line.trim());
+            } 
+            file.close();
+        } catch (IOException e) {
+            e.printStackTrace();
+        }
     return list;
   }
 
diff --git a/voltdb/src/main/java/site/ycsb/db/voltdb/YCSBSchemaBuilder.java b/voltdb/src/main/java/site/ycsb/db/voltdb/YCSBSchemaBuilder.java
index 7e88be81..476ca7a0 100644
--- a/voltdb/src/main/java/site/ycsb/db/voltdb/YCSBSchemaBuilder.java
+++ b/voltdb/src/main/java/site/ycsb/db/voltdb/YCSBSchemaBuilder.java
@@ -174,21 +174,20 @@ public final class YCSBSchemaBuilder {
     File file = new File(tempDir + File.separator + jarFileName);
 
     byte[] jarFileContents = new byte[(int) file.length()];
-    FileInputStream fis = new FileInputStream(file);
-    fis.read(jarFileContents);
-    fis.close();
-    logger.info("Calling @UpdateClasses to load JAR file containing procedures");
-
-    cr = voltClient.callProcedure("@UpdateClasses", jarFileContents, null);
-    if (cr.getStatus() != ClientResponse.SUCCESS) {
-      throw new Exception("Attempt to execute UpdateClasses failed:" + cr.getStatusString());
-    }
-
-    for (int i = 0; i < procStatements.length; i++) {
-      logger.info(procStatements[i]);
-      cr = voltClient.callProcedure("@AdHoc", procStatements[i]);
+    try (FileInputStream fis = new FileInputStream(file)) {
+      fis.read(jarFileContents);
+      fis.close();
+      logger.info("Calling @UpdateClasses to load JAR file containing procedures");
+      cr = voltClient.callProcedure("@UpdateClasses", jarFileContents, null);
       if (cr.getStatus() != ClientResponse.SUCCESS) {
-        throw new Exception("Attempt to execute '" + procStatements[i] + "' failed:" + cr.getStatusString());
+        throw new Exception("Attempt to execute UpdateClasses failed:" + cr.getStatusString());
+      }
+      for (int i = 0; i < procStatements.length; i++) {
+        logger.info(procStatements[i]);
+        cr = voltClient.callProcedure("@AdHoc", procStatements[i]);
+        if (cr.getStatus() != ClientResponse.SUCCESS) {
+          throw new Exception("Attempt to execute '" + procStatements[i] + "' failed:" + cr.getStatusString());
+        }
       }
     }
 
